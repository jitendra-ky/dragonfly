[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.format]  # Enables Ruff's formatter
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]  # Enable all useful linting rules
ignore = [
    "TRY002",  # Create your own exception
    "BLE001",  # Do not catch blind exception: `Exception`
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "T201",    # `print` found
    "S106",    # Possible hardcoded password assigned to argument
    "PT009",   # Use a regular `assert` instead of unittest-style `assertEqual`
    "ANN201",  # Missing return type annotation for public function
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "EM101",   # Exception must not use a string literal, assign to variable first
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "S105",    # Possible hardcoded password assigned to variable
    "TRY003",  # Avoid specifying long messages outside the exception class
]

# ruff check --force-exclude $(git ls-files '*.py') --output-format=concise